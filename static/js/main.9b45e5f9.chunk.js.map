{"version":3,"sources":["context/reducer.js","context/types.js","context/Context.js","theme.js","api/api.js","components/header/CurrencySelector.jsx","components/header/Header.jsx","components/pizza/CardItem.jsx","components/pizza/List.jsx","components/cart/CartItem.jsx","components/cart/List.jsx","components/cart/DeliveryRow.jsx","components/cart/SumRow.jsx","components/cart/OrderDetails.jsx","components/cart/Cart.jsx","App.jsx","serviceWorker.js","index.js"],"names":["CURRENCY","RUB","name","sign","USD","EUR","initialState","isLoading","catalogue","currency","deliveryCost","undefined","user","order","JSON","parse","localStorage","getItem","reducer","state","action","type","payload","pizza_id","price_RUB","price_USD","price_EUR","push","count","setItem","stringify","filter","el","find","currentOrder","Context","createContext","ContextProvider","children","useReducer","dispatch","Provider","value","theme","createMuiTheme","spacing","palette","primary","main","deepPurple","contrastText","secondary","amber","A400","API_URL","fetchApi","url","options","Promise","resolve","reject","fetch","then","response","status","json","data","catch","res","error","api","get","mode","credentials","headers","post","method","body","useStyles","makeStyles","root","background","borderColor","color","backgroundColor","fontWeight","label","selected","CurrenySelector","useContext","useState","selectedCurrency","setSelectedCurrency","classes","ToggleButtonGroup","size","exclusive","aria-label","onChange","e","newCurrency","ToggleButton","Header","badgeContent","length","map","reduce","acc","cur","AppBar","position","Toolbar","to","style","flexGrow","textDecoration","Typography","variant","CurrencySelector","Button","IconButton","edge","Badge","CardItem","props","pizza","id","description","image","ingredients","currentCurrency","addToOrder","removeFromOrder","Card","CardHeader","title","component","subheader","onClick","CardMedia","paddingTop","CardContent","List","Box","m","Grid","container","key","item","xs","sm","md","lg","width","height","buttonCounter","pointerEvents","CartItem","currentPizza","alignItems","alt","src","className","ButtonGroup","toFixed","i","Divider","DeliveryRow","SumRow","sum","OrderDetails","useEffect","Container","button","marginRight","instructions","marginTop","marginBottom","HorizontalLinearStepper","React","activeStep","setActiveStep","Set","skipped","setSkipped","steps","isStepOptional","step","isStepSkipped","has","Stepper","index","stepProps","labelProps","optional","completed","Step","StepLabel","getStepContent","disabled","prevActiveStep","Error","prevSkipped","newSkipped","values","add","delete","App","LinearProgress","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","basename","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.9b45e5f9.chunk.js","sourcesContent":["import * as types from './types.js';\n\nexport const CURRENCY = {\n  RUB: {\n    name: 'RUB',\n    sign: '₽',\n  },\n  USD: {\n    name: 'USD',\n    sign: '$',\n  },\n  EUR: {\n    name: 'EUR',\n    sign: '€',\n  },\n};\n\nexport const initialState = {\n  isLoading: false,\n  catalogue: [],\n  currency: CURRENCY.USD,\n  deliveryCost: undefined,\n  user: null,\n  order: JSON.parse(localStorage.getItem('order')) || [],\n};\n\nexport function reducer(state, action) {\n  const {type, payload} = action;\n\n  switch (type) {\n    case types.SET_LOADING: {\n      return {\n        ...state,\n        isLoading: payload,\n      };\n    }\n\n    case types.SET_DELIVERY_COST: {\n      return {\n        ...state,\n        deliveryCost: payload,\n      };\n    }\n\n    case types.SET_CATALOGUE: {\n      // localStorage.setItem('catalogue', JSON.stringify(payload));\n      return {\n        ...state,\n        catalogue: payload,\n      };\n    }\n\n    case types.ADD_TO_ORDER: {\n      const order = [...state.order];\n      const { pizza_id, price_RUB, price_USD, price_EUR } = payload;\n      order.push({\n        pizza_id,\n        count: 1,\n        price_RUB,\n        price_USD,\n        price_EUR,\n      });\n\n      localStorage.setItem('order', JSON.stringify(order));\n      return {\n        ...state,\n        order,\n      };\n    }\n\n    case types.REMOVE_FROM_ORDER: {\n      const order = [...state.order].filter(el => el.pizza_id !== payload);\n\n      localStorage.setItem('order', JSON.stringify(order));\n      return {\n        ...state,\n        order,\n      };\n    }\n    \n    case types.UPDATE_CURRENCY: {\n      return {\n        ...state,\n        currency: payload,\n      };\n    }\n\n    case types.RISE_COUNT: {\n      const order = [...state.order];\n      let currentOrder = order.find(el => el.pizza_id === payload);\n      currentOrder.count++;\n      return {\n        ...state,\n        order,\n      };\n    }\n\n    case types.DECREASE_COUNT: {\n      const order = [...state.order];\n      let currentOrder = order.find(el => el.pizza_id === payload);\n      if (currentOrder.count > 0) currentOrder.count--;\n      return {\n        ...state,\n        order,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","export const SET_CATALOGUE = 'SET_CATALOGUE';\nexport const ADD_TO_ORDER = 'ADD_TO_ORDER';\nexport const REMOVE_FROM_ORDER = 'REMOVE_FROM_ORDER';\nexport const UPDATE_CURRENCY = 'UPDATE_CURRENCY';\nexport const RISE_COUNT = 'RISE_COUNT';\nexport const DECREASE_COUNT = 'DECREASE_COUNT';\nexport const SET_LOADING = 'IS_LOADING';\nexport const SET_DELIVERY_COST = 'SET_DELIVERY_COST';","import React, { createContext, useReducer } from 'react';\nimport {initialState, reducer} from './reducer';\n\nconst Context = createContext();\n\nfunction ContextProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <Context.Provider value={{state, dispatch}}>\n      {children}\n    </Context.Provider>\n  );\n}\n\nexport { ContextProvider, Context };","import { createMuiTheme } from '@material-ui/core/styles';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport amber from '@material-ui/core/colors/amber';\n\nconst theme = createMuiTheme({\n  spacing: 8,\n  palette: {\n    primary: {\n      main: deepPurple[500],\n      contrastText: '#ffffff',\n    },\n    secondary: {main: amber.A400},\n  },\n});\n\nexport default theme;","const API_URL = 'https://my-json-server.typicode.com/tereshka/pizza-delivery';\n\nconst fetchApi = (url, options = {}) => {\n  return new Promise((resolve, reject) => {\n    fetch(url, options)\n      .then(response => {\n        if (response.status < 400) {\n          return response.json();\n        } else {\n          throw response;\n        }\n      })\n      .then(data => {\n        resolve(data);\n      })\n      .catch(res => {\n        // reject(response);\n        res.json().then(error => {\n          reject(error);\n        });\n      });\n  });\n};\n\nconst api = {\n  get(url) {\n    return fetchApi(`${API_URL}${url}`, {\n      mode: 'cors',\n      credentials: \"include\",\n      headers: {\n        'Content-type': 'application/json',\n        \n      },\n    });\n  },\n  post(url, options = {}) {\n    return fetchApi(`${API_URL}${url}`, {\n      method: 'POST',\n      mode: 'cors',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(options)\n    });\n  }\n};\n\nexport default api;","import React, { useContext, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Context } from '../../context/Context';\nimport { CURRENCY } from '../../context/reducer';\nimport { UPDATE_CURRENCY } from '../../context/types';\n\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: 'inherit',\n    // border: '1px',\n    borderColor: theme.palette.secondary.main,\n    color: theme.palette.primary.contrastText,\n    '&$selected': {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.primary.main,\n      fontWeight: 'bold',\n    },\n  },\n  label: {\n    color: theme.palette.primary.contrastText,\n  },\n  selected: {},\n}));\n\nfunction CurrenySelector() {\n  const { state, dispatch } = useContext(Context);\n  const { currency } = state;\n  const [selectedCurrency, setSelectedCurrency] = useState(currency.name);\n\n  const handleChange = (e, newCurrency) => {\n    if (newCurrency !== null) {\n      setSelectedCurrency(newCurrency);\n      dispatch({\n        type: UPDATE_CURRENCY,\n        payload: CURRENCY[newCurrency],\n      });\n    }\n  };\n\n  const classes = useStyles();\n\n  return (\n    <ToggleButtonGroup\n      size=\"small\" exclusive\n      aria-label=\"select currency\"\n      name=\"currency\"\n      value={selectedCurrency}\n      onChange={handleChange}\n    >\n      <ToggleButton\n        classes={{\n          root: classes.root,\n          label: classes.label,\n          selected: classes.selected,\n        }}\n        value={CURRENCY.RUB.name}\n        aria-label={CURRENCY.RUB.name}\n      >\n        {CURRENCY.RUB.name}\n      </ToggleButton>\n      <ToggleButton\n        classes={{\n          root: classes.root,\n          label: classes.label,\n          selected: classes.selected,\n        }}\n        value={CURRENCY.USD.name}\n        aria-label={CURRENCY.USD.name}\n      >\n        {CURRENCY.USD.name}\n      </ToggleButton>\n      <ToggleButton\n        classes={{\n          root: classes.root,\n          label: classes.label,\n          selected: classes.selected,\n        }}\n        value={CURRENCY.EUR.name}\n        aria-label={CURRENCY.EUR.name}\n      >\n        {CURRENCY.EUR.name}\n      </ToggleButton>\n    </ToggleButtonGroup>\n  );\n}\n\nexport default CurrenySelector;","import React, { useContext } from 'react';\nimport { Context } from '../../context/Context';\n\nimport { Link } from 'react-router-dom';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  IconButton,\n  Badge,\n} from '@material-ui/core';\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport CurrencySelector from './CurrencySelector';\n\nfunction Header() {\n  const { state } = useContext(Context);\n  const badgeContent = state.order.length === 0 ? 0 : state.order.map(el => el.count).reduce((acc, cur) => acc + cur);\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Link to=\"/\" style={{color: 'inherit', flexGrow: 1, textDecoration: 'none'}}>\n          <Typography variant=\"h6\" style={{}}>\n            Pizza Delivery\n          </Typography>\n        </Link>\n        \n        <CurrencySelector />\n        <Button color=\"inherit\">Login</Button>\n        <Link to=\"/cart\" style={{color: 'inherit'}}>\n          <IconButton edge=\"end\" color=\"inherit\" aria-label=\"go to cart\">\n            <Badge badgeContent={badgeContent} color=\"secondary\">\n              <ShoppingCartOutlinedIcon />\n            </Badge>\n          </IconButton>\n        </Link>\n        \n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Header;","import React, { useContext } from 'react';\nimport { Context } from '../../context/Context';\nimport { CURRENCY } from '../../context/reducer';\nimport { ADD_TO_ORDER, REMOVE_FROM_ORDER } from '../../context/types';\n\nimport {\n  Card,\n  CardHeader,\n  CardMedia,\n  CardContent,\n  Typography,\n  IconButton,\n} from '@material-ui/core';\n\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\n\nfunction CardItem(props) {\n  const { state, dispatch } = useContext(Context);\n  const {currency, order} = state;\n  const { id, name, description, image, ingredients, price_RUB, price_USD, price_EUR } = props.pizza;\n  \n  const currentCurrency = currency === CURRENCY.RUB\n    ? price_RUB\n    : currency === CURRENCY.USD\n      ? price_USD : price_EUR;\n\n  function cardTitle() {\n    return (\n      <>\n        <Typography variant=\"h6\" style={{ fontWeight: 'bold' }} component=\"span\">\n          {`${name}, `}\n        </Typography>\n        <Typography variant=\"h6\" color=\"primary\" component=\"span\">\n          {`${currentCurrency}${currency.sign}`}\n        </Typography>\n      </>\n    );\n  }\n\n  function cartIcon() {\n    const inCart = order.find(el => el.pizza_id === id);\n    if (inCart) {\n      return (\n        <IconButton aria-label=\"remove from cart\" onClick={removeFromOrder}>\n          <ShoppingCartIcon color=\"primary\" />\n        </IconButton>);\n    }\n    return (\n      <IconButton aria-label=\"add to cart\" onClick={addToOrder}>\n        <ShoppingCartOutlinedIcon />\n      </IconButton>);\n  }\n\n  function addToOrder() {\n    dispatch({\n      type: ADD_TO_ORDER,\n      payload: {\n        pizza_id: id,\n        price_RUB,\n        price_USD,\n        price_EUR,\n      },\n    });\n  }\n\n  function removeFromOrder() {\n    dispatch({\n      type: REMOVE_FROM_ORDER,\n      payload: id,\n    });\n  }\n\n  return (\n    <Card>\n      <CardHeader\n        title={cardTitle()}\n        subheader={description}\n        action={\n          cartIcon()\n        }\n      />\n      <CardMedia\n        style={{paddingTop: '50%'}}\n        // className={classes.media}\n        image={image}\n        title={name}\n      />\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {ingredients}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default CardItem;","import React, { useContext } from 'react';\nimport { Context } from '../../context/Context';\n\nimport {Grid, Box} from '@material-ui/core';\nimport {default as PizzaCard} from './CardItem.jsx';\n\nfunction List() {\n  const { state } = useContext(Context);\n  const { catalogue } = state;\n\n  return (\n    <Box m={3}>\n      <Grid container spacing={3}>\n        {\n          catalogue.map(el => (\n            <Grid  key={`pizza-${el.id}`} item xs={12} sm={6} md={4} lg={3} >\n              <PizzaCard pizza={el} />\n            </Grid>\n          ))\n        }\n      </Grid>\n    </Box>\n  );\n};\n\nexport default List;","import React, { useContext } from 'react';\n\nimport { Context } from '../../context/Context';\nimport { CURRENCY } from '../../context/reducer';\nimport { RISE_COUNT, DECREASE_COUNT, REMOVE_FROM_ORDER } from '../../context/types';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid, Typography, ButtonGroup, Button, IconButton } from '@material-ui/core';\nimport DeleteForeverOutlinedIcon from '@material-ui/icons/DeleteForeverOutlined';\n\nconst useStyles = makeStyles((theme) => ({\n  image: {\n    width: '100%',\n    height: '100%',\n  },\n  buttonCounter: {\n    pointerEvents: 'none',\n  },\n}));\n\nfunction CartItem(props) {\n  const { state, dispatch } = useContext(Context);\n  const { catalogue, currency } = state;\n  const { pizza_id, count, price_RUB, price_USD, price_EUR} = props.order;\n\n  const currentPizza = catalogue.find(el => el.id === pizza_id);\n  const { name, image, description} = currentPizza;\n\n  const currentCurrency = currency === CURRENCY.RUB\n    ? price_RUB\n    : currency === CURRENCY.USD\n      ? price_USD : price_EUR;\n\n  function handlePlusButton() {\n    dispatch({\n      type: RISE_COUNT,\n      payload: pizza_id,\n    });\n  }\n\n  function handleMinusButton() {\n    dispatch({\n      type: DECREASE_COUNT,\n      payload: pizza_id,\n    });\n  }\n\n  function removeFromOrder() {\n    dispatch({\n      type: REMOVE_FROM_ORDER,\n      payload: pizza_id,\n    });\n  }\n\n  const classes = useStyles();\n  return (\n    <Grid container alignItems=\"center\" m={3}>\n      <Grid item xs={2} sm={2} md={2} lg={2}>\n        <img alt={name} src={image} className={classes.image} />\n      </Grid>\n      <Grid item xs sm md lg>\n        <Typography variant=\"h6\" style={{}}>\n          {name}\n        </Typography>\n        <Typography variant=\"body1\" style={{}}>\n          {description}\n        </Typography>\n      </Grid>\n      <Grid item xs={2} sm={2} md={2} lg={2} >\n        <ButtonGroup size=\"large\" color=\"primary\" aria-label=\"outlined primary button group\">\n          <Button variant=\"outlined\" onClick={handleMinusButton} >-</Button>\n          <Button variant=\"outlined\" className={classes.buttonCounter} >{count}</Button>\n          <Button variant=\"outlined\" onClick={handlePlusButton} >+</Button>\n        </ButtonGroup>\n      </Grid>\n      <Grid item xs={1} sm={1} md={1} lg={1} >\n        <Typography variant=\"h6\" style={{}}>\n          {`${(currentCurrency * count).toFixed(2)} ${currency.sign}`}\n        </Typography>\n        <Typography variant=\"body1\" style={{}}>\n          {`${currentCurrency} ${currency.sign}`}\n        </Typography>\n      </Grid>\n      <Grid item xs={1} sm={1} md={1} lg={1} >\n        <IconButton aria-label=\"remove from cart\" onClick={removeFromOrder}>\n          <DeleteForeverOutlinedIcon color=\"primary\" />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n}\nexport default CartItem;","import React, { useContext } from 'react';\n\nimport { Context } from '../../context/Context';\n\nimport { Divider } from '@material-ui/core';\nimport CartItem from './CartItem';\n\nfunction List() {\n  const { state } = useContext(Context);\n  const { order } = state;\n\n  return (\n    <>\n      {\n        order.map((el, i) => (\n          <div key={`order-${i}`}>\n            <CartItem order={el} />\n            <Divider />\n          </div>\n        ))\n      }\n    </>\n  );\n}\n\nexport default List;","import React, { useContext } from 'react';\n\nimport { Context } from '../../context/Context';\nimport { CURRENCY } from '../../context/reducer'\n\nimport { Grid, Typography } from '@material-ui/core';\n\nfunction DeliveryRow() {\n  const { state } = useContext(Context);\n  const { currency, deliveryCost } = state;\n\n  const currentCurrency = currency === CURRENCY.RUB\n    ? deliveryCost.RUB\n    : currency === CURRENCY.USD\n      ? deliveryCost.USD : deliveryCost.EUR;\n\n  return (\n    <Grid container alignItems=\"center\" m={3}>\n      <Grid item xs sm md lg>\n        <Typography variant=\"h6\" style={{}}>\n          Delivery cost\n        </Typography>\n      </Grid>\n      <Grid item xs={2} sm={2} md={2} lg={2} >\n        <Typography variant=\"h6\" style={{}}>\n          {`${currentCurrency} ${currency.sign}`}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\nexport default DeliveryRow;","import React, { useContext } from 'react';\n\nimport { Context } from '../../context/Context'\n\nimport { Grid, Typography } from '@material-ui/core';\n\nfunction SumRow() {\n  const { state } = useContext(Context);\n  const { currency, deliveryCost, order } = state;\n\n  let sum = order.map(el => el.count * el[`price_${currency.name}`]).reduce((acc, sum) => acc + sum);\n  sum = (sum + deliveryCost[currency.name]).toFixed(2);\n\n  return (\n    <Grid container alignItems=\"center\" m={3}>\n      <Grid item xs sm md lg>\n        <Typography variant=\"h6\" style={{}}>\n          Total SUM\n        </Typography>\n      </Grid>\n      <Grid item xs={2} sm={2} md={2} lg={2} >\n        <Typography variant=\"h6\" style={{}}>\n          {`${sum} ${currency.sign}`}\n        </Typography>\n      </Grid>\n    </Grid>\n  );\n}\nexport default SumRow;","import React, { useContext, useEffect } from 'react';\nimport { Context } from '../../context/Context';\nimport { SET_DELIVERY_COST } from '../../context/types.js';\nimport api from '../../api/api.js';\n\nimport { Container, Box, Divider } from '@material-ui/core';\nimport List from './List';\nimport DeliveryRow from './DeliveryRow';\nimport SumRow from './SumRow';\n\nfunction OrderDetails() {\n  const { state, dispatch } = useContext(Context);\n  const { order, catalogue, deliveryCost } = state;\n\n  useEffect(() => {\n    const loadDeliveryCost = () => {\n      api.get('/delivery_cost').then(data => {\n        dispatch({\n          type: SET_DELIVERY_COST,\n          payload: data,\n        });\n      });\n    }\n\n    if (deliveryCost === undefined) {\n      loadDeliveryCost();\n    }\n  }, [deliveryCost, dispatch]);\n\n  return (\n    <Box m={3}>\n      {order.length === 0\n      ? <div>No order</div>\n      : catalogue.length > 0\n        ? <Container>\n          <List />\n          {deliveryCost !== undefined && <DeliveryRow />}\n          <Divider />\n          {deliveryCost !== undefined && <SumRow />}\n        </Container>\n        : <div>Loading data...</div>\n      }\n    </Box>\n  );\n}\n\nexport default OrderDetails;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nimport OrderDetails from './OrderDetails';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  instructions: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nfunction getSteps() {\n  return ['Check your order', 'Give us your address', 'Create an order'];\n}\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <OrderDetails />;\n    case 1:\n      return 'What is an ad group anyways?';\n    case 2:\n      return 'This is the bit I really care about!';\n    default:\n      return 'Unknown step';\n  }\n}\n\nexport default function HorizontalLinearStepper() {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [skipped, setSkipped] = React.useState(new Set());\n  const steps = getSteps();\n\n  const isStepOptional = (step) => {\n    return step === 1;\n  };\n\n  const isStepSkipped = (step) => {\n    return skipped.has(step);\n  };\n\n  const handleNext = () => {\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSkip = () => {\n    if (!isStepOptional(activeStep)) {\n      throw new Error(`You can't skip a step that isn't optional.`);\n    }\n\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped((prevSkipped) => {\n      const newSkipped = new Set(prevSkipped.values());\n      newSkipped.add(activeStep);\n      return newSkipped;\n    });\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Stepper activeStep={activeStep}>\n        {steps.map((label, index) => {\n          const stepProps = {};\n          const labelProps = {};\n          if (isStepOptional(index)) {\n            labelProps.optional = <Typography variant=\"caption\">Optional</Typography>;\n          }\n          if (isStepSkipped(index)) {\n            stepProps.completed = false;\n          }\n          return (\n            <Step key={label} {...stepProps}>\n              <StepLabel {...labelProps}>{label}</StepLabel>\n            </Step>\n          );\n        })}\n      </Stepper>\n      <div>\n        {activeStep === steps.length ? (\n          <div>\n            <Typography className={classes.instructions}>\n              All steps completed - you&apos;re finished\n            </Typography>\n            <Button onClick={handleReset} className={classes.button}>\n              Reset\n            </Button>\n          </div>\n        ) : (\n          <div>\n            {getStepContent(activeStep)}\n            <div>\n              <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\n                Back\n              </Button>\n              {isStepOptional(activeStep) && (\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={handleSkip}\n                  className={classes.button}\n                >\n                  Skip\n                </Button>\n              )}\n\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={handleNext}\n                className={classes.button}\n              >\n                {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","import React, { useContext, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Context } from './context/Context';\nimport { SET_LOADING, SET_CATALOGUE } from './context/types';\nimport api from './api/api.js';\n\nimport { Box, LinearProgress } from '@material-ui/core';\nimport Header from './components/header/Header.jsx';\nimport {default as PizzaList} from './components/pizza/List.jsx';\nimport Cart from './components/cart/Cart.jsx';\n\nimport './App.css';\n\nfunction App() {\n  const { state, dispatch } = useContext(Context);\n  const { catalogue, isLoading } = state;\n\n  \n\n  useEffect(() => {\n    const loadCatalogue = () => {\n      dispatch({\n        type: SET_LOADING,\n        payload: true,\n      });\n      api.get('/pizza_list').then(data => {\n        dispatch({\n          type: SET_CATALOGUE,\n          payload: data,\n        });\n        dispatch({\n          type: SET_LOADING,\n          payload: false,\n        });\n      });\n    };\n\n    if (catalogue.length === 0) {\n      loadCatalogue();\n    }\n  }, [catalogue, dispatch]);\n\n  return (\n    <Box>\n      <Header />\n      { isLoading && <LinearProgress color=\"secondary\" /> }\n      <Switch>\n        <Route exact path=\"/\">\n          <PizzaList />\n        </Route>\n        <Route path=\"/cart\">\n          <Cart />\n        </Route>\n      </Switch>\n    </Box>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { HashRouter as Router } from 'react-router-dom';\nimport { ContextProvider } from './context/Context';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport theme from './theme.js';\n\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <ContextProvider>\n    <Router basename=\"/\">\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </Router>\n  </ContextProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}